{"version":3,"sources":["chat-widget-olli-perikanta-admin.js","colorpicker.js"],"names":["jQuery","document","addEventListener","everyPage_C","getElementById","URLContains_C","specificURL_C","specificTimePeriod_C","continiously_C","specificWeekday_C","specificTime_C","setLive_C","specificTimePeriod_ID","specificTime_ID","specificWeekday_ID","continiously_ID","everyPage_ID","specificURL_ID","URLContainsThis_ID","setLive_ID","this","classList","add","remove","checked","toggle","nextElementSibling","window","Math","picker","colorArea","colorAreaDims","colorMarker","colorPreview","colorValue","clearButton","hueSlider","hueMarker","alphaSlider","alphaMarker","currentEl","currentFormat","oldColor","ctx","createElement","getContext","currentColor","r","g","b","h","s","v","a","settings","el","parent","theme","themeMode","wrap","margin","format","formatToggle","swatches","swatchesOnly","alpha","focusInput","autoClose","show","label","a11y","open","close","marker","input","swatch","instruction","configure","options","key","bindFields","wrapFields","querySelector","appendChild","matchMedia","matches","className","isNaN","getEl","style","display","Array","isArray","forEach","i","push","length","innerHTML","join","setAttribute","labels","update","openLabel","swatchLabel","selector","addListener","event","coords","target","getBoundingClientRect","scrollY","reposition","left","top","offset","x","y","height","value","str","substring","toLowerCase","getColorFormatFromStr","pickerWidth","offsetWidth","pickerHeight","offsetHeight","getComputedStyle","marginTop","parseFloat","borderTop","borderTopWidth","clientWidth","width","clientHeight","scrollTop","documentElement","offsetLeft","offsetTop","setColorFromStr","focus","preventScroll","parentNode","contains","color","querySelectorAll","field","wrapper","insertBefore","closePicker","revert","dispatchEvent","Event","bubbles","rgba","match","regex","fillStyle","exec","toFixed","replace","map","parseInt","strToRGBA","hsva","red","green","blue","xmax","max","xmin","min","chroma","hue","saturation","floor","round","RGBAtoHSVA","updateMarkerA11yLabel","updateColor","pickColor","undefined","setColorAtPosition","hueBy60","abs","m","index","HSVAtoRGBA","moveMarker","pointer","pageX","changedTouches","pageY","getPointerPosition","preventDefault","stopPropagation","moveMarkerOnKeydown","offsetX","offsetY","_key","hsla","hex","R","toString","G","B","A","RGBAToHex","opaqueHex","RGBAToStr","lightness","l","HSVAtoHSLA","setHue","setAlpha","id","context","type","fn","Element","prototype","msMatchesSelector","call","DOMReady","args","readyState","apply","NodeList","Coloris","methods","set","_loop","_len","arguments","_key2","body","passive","textContent","removeEventListener","movements","ArrowUp","ArrowDown","ArrowLeft","ArrowRight","Object","keys","indexOf"],"mappings":"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","file":"contact-widget-op-admin.js","sourcesContent":["(function( $ ) {\n\t'use strict';\n\n\t/**\n\t * All of the code for your admin-facing JavaScript source\n\t * should reside in this file.\n\t *\n\t * Note: It has been assumed you will write jQuery code here, so the\n\t * $ function reference has been prepared for usage within the scope\n\t * of this function.\n\t *\n\t * This enables you to define handlers, for when the DOM is ready:\n\t *\n\t * $(function() {\n\t *\n\t * });\n\t *\n\t * When the window is loaded:\n\t *\n\t * $( window ).load(function() {\n\t *\n\t * });\n\t *\n\t * ...and/or other possibilities.\n\t *\n\t * Ideally, it is not considered best practise to attach more than a\n\t * single DOM-ready or window-load handler for a particular page.\n\t * Although scripts in the WordPress core, Plugins and Themes may be\n\t * practising this, we should strive to set a better example in our own work.\n\t */\n\n})( jQuery );\n\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n\t// Container ID's\n\n\tvar everyPage_C = document.getElementById('everyPageContainer');\n\tvar URLContains_C = document.getElementById('URLContainsContainer');\n\tvar specificURL_C = document.getElementById('SpecificURLContainer');\n\tvar specificTimePeriod_C = document.getElementById('specificTimePeriodContainer');\n\tvar continiously_C = document.getElementById('continiouslyContainer');\n\tvar specificWeekday_C = document.getElementById('specificWeekdayContainer');\n\tvar specificTime_C = document.getElementById('specificTimeContainer');\n\tvar setLive_C = document.getElementById('setLiveContainer');\n\n\t// Input ID's\n\n\tvar specificTimePeriod_ID = document.getElementById('specificTimePeriodInputID');\n\tvar specificTime_ID = document.getElementById('specificTimeInputID');\n\tvar specificWeekday_ID = document.getElementById('specificWeekdayInputID');\n\tvar continiously_ID = document.getElementById('continiouslyInputID');\n\tvar everyPage_ID = document.getElementById('everyPageInputID');\n\tvar specificURL_ID = document.getElementById('specificURLInputID');\n\tvar URLContainsThis_ID = document.getElementById('URLContainsThisInputID');\n\tvar setLive_ID = document.getElementById('setLiveInputID');\n\n\t// Continiously js-code\n\tcontiniously_C.addEventListener('change', function () {\n\t\tthis.classList.add('active-label');\n\t\tspecificTimePeriod_C.classList.remove('active-label');\n\t});\n\n\t// When page load, check if Continiously is checked\n\tif ( continiously_ID.checked == true ) {\n\t\tcontiniously_C.classList.add('active-label');\n\t} \n\n\t// Continiously (option show on specific time) js-code\n\tspecificTime_C.addEventListener('change', function () {\n\t\tthis.classList.toggle('not-selected');\n\t\tthis.nextElementSibling.classList.toggle('hide-element');\n\t});\n\n\t// When page load, check if \n\tif ( specificTime_ID.checked == true ) {\n\t\tspecificTime_C.classList.remove('not-selected');\n\t\tspecificTime_C.nextElementSibling.classList.toggle('hide-element');\n\t} \n\n\t// Continiously (option select specific weekdays) js-code\n\tspecificWeekday_C.addEventListener('change', function () {\n\t\tthis.classList.toggle('not-selected');\n\t\tthis.nextElementSibling.classList.toggle('hide-element');\n\t});\n\n\t// When page load, check if \n\tif ( specificWeekday_ID.checked == true ) {\n\t\tspecificWeekday_C.classList.remove('not-selected');\n\t\tspecificWeekday_C.nextElementSibling.classList.toggle('hide-element');\n\t} \n\n\t// Specific time period js-code\n\tspecificTimePeriod_C.addEventListener('change', function () {\n\t\tthis.classList.add('active-label');\n\t\tcontiniously_C.classList.remove('active-label');\n\t});\n\n\t// When page load, check if Specific time period is checked\n\tif ( specificTimePeriod_ID.checked == true ) {\n\t\tspecificTimePeriod_C.classList.add('active-label');\n\t} \n\n\teveryPage_C.addEventListener('click', function () {\n\t\tspecificURL_C.classList.remove('active-label');\n\t\tURLContains_C.classList.remove('active-label');\n\t\teveryPage_C.classList.add('active-label');\n\t});\n\n\t// When page load, check if \n\tif ( everyPage_ID.checked == true ) {\n\t\teveryPage_C.classList.add('active-label');\n\t}\n\n\tspecificURL_C.addEventListener('click', function () {\n\t\tspecificURL_C.classList.add('active-label');\n\t\tURLContains_C.classList.remove('active-label');\n\t\teveryPage_C.classList.remove('active-label');\n\t});\n\n\t// When page load, check if \n\tif ( specificURL_ID.checked == true ) {\n\t\tspecificURL_C.classList.add('active-label');\n\t}\n\n\tURLContains_C.addEventListener('click', function () {\n\t\tspecificURL_C.classList.remove('active-label');\n\t\tURLContains_C.classList.add('active-label');\n\t\teveryPage_C.classList.remove('active-label');\n\t});\n\n\t// When page load, check if \n\tif ( URLContainsThis_ID.checked == true ) {\n\t\tURLContains_C.classList.add('active-label');\n\t}\n\n\tsetLive_C.addEventListener('change', function () {\n\t\tsetLive_C.classList.toggle('active-label');\n\t});\n\n\t// When page load, check if \n\tif ( setLive_ID.checked == true ) {\n\t\tsetLive_C.classList.add('active-label');\n\t}\n});","\n /*!\n * Copyright (c) 2021 Momo Bassit.\n * Licensed under the MIT License (MIT)\n * https://github.com/mdbassit/Coloris\n */\n\n (function (window, document, Math) {\n  var ctx = document.createElement('canvas').getContext('2d');\n  var currentColor = { r: 0, g: 0, b: 0, h: 0, s: 0, v: 0, a: 1 };\n  var picker, colorArea, colorAreaDims, colorMarker, colorPreview, colorValue, clearButton,\n  hueSlider, hueMarker, alphaSlider, alphaMarker, currentEl, currentFormat, oldColor;\n\n  // Default settings\n  var settings = {\n    el: '[data-coloris]',\n    parent: null,\n    theme: 'default',\n    themeMode: 'light',\n    wrap: true,\n    margin: 2,\n    format: 'hex',\n    formatToggle: false,\n    swatches: [],\n    swatchesOnly: false,\n    alpha: true,\n    focusInput: true,\n    autoClose: false,\n    clearButton: {\n      show: false,\n      label: 'Clear' },\n\n    a11y: {\n      open: 'Open color picker',\n      close: 'Close color picker',\n      marker: 'Saturation: {s}. Brightness: {v}.',\n      hueSlider: 'Hue slider',\n      alphaSlider: 'Opacity slider',\n      input: 'Color value field',\n      format: 'Color format',\n      swatch: 'Color swatch',\n      instruction: 'Saturation and brightness selector. Use up, down, left and right arrow keys to select.' } };\n\n\n\n  /**\n   * Configure the color picker.\n   * @param {object} options Configuration options.\n   */\n  function configure(options) {\n    if (typeof options !== 'object') {\n      return;\n    }\n\n    for (var key in options) {\n      switch (key) {\n        case 'el':\n          bindFields(options.el);\n          if (options.wrap !== false) {\n            wrapFields(options.el);\n          }\n          break;\n        case 'parent':\n          settings.parent = document.querySelector(options.parent);\n          if (settings.parent) {\n            settings.parent.appendChild(picker);\n          }\n          break;\n        case 'themeMode':\n          settings.themeMode = options.themeMode;\n          if (options.themeMode === 'auto' && window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {\n            settings.themeMode = 'dark';\n          }\n        // The lack of a break statement is intentional\n        case 'theme':\n          if (options.theme) {\n            settings.theme = options.theme;\n          }\n          picker.className = \"clr-picker clr-\" + settings.theme + \" clr-\" + settings.themeMode;\n          break;\n        case 'margin':\n          options.margin *= 1;\n          settings.margin = !isNaN(options.margin) ? options.margin : settings.margin;\n          break;\n        case 'wrap':\n          if (options.el && options.wrap) {\n            wrapFields(options.el);\n          }\n          break;\n        case 'formatToggle':\n          getEl('clr-format').style.display = options.formatToggle ? 'block' : 'none';\n          if (options.formatToggle) {\n            settings.format = 'auto';\n          }\n          break;\n        case 'swatches':\n          if (Array.isArray(options.swatches)) {(function () {\n              var swatches = [];\n\n              options.swatches.forEach(function (swatch, i) {\n                swatches.push(\"<button id=\\\"clr-swatch-\" + i + \"\\\" aria-labelledby=\\\"clr-swatch-label clr-swatch-\" + i + \"\\\" style=\\\"color: \" + swatch + \";\\\">\" + swatch + \"</button>\");\n              });\n\n              if (swatches.length) {\n                getEl('clr-swatches').innerHTML = \"<div>\" + swatches.join('') + \"</div>\";\n              }})();\n          }\n          break;\n        case 'swatchesOnly':\n          settings.swatchesOnly = !!options.swatchesOnly;\n          picker.setAttribute('data-minimal', settings.swatchesOnly);\n\n          if (settings.swatchesOnly) {\n            settings.autoClose = true;\n          }\n          break;\n        case 'alpha':\n          settings.alpha = !!options.alpha;\n          picker.setAttribute('data-alpha', settings.alpha);\n          break;\n        case 'clearButton':\n          var display = 'none';\n\n          if (options.clearButton.show) {\n            display = 'block';\n          }\n\n          if (options.clearButton.label) {\n            clearButton.innerHTML = options.clearButton.label;\n          }\n\n          clearButton.style.display = display;\n          break;\n        case 'a11y':\n          var labels = options.a11y;\n          var update = false;\n\n          if (typeof labels === 'object') {\n            for (var label in labels) {\n              if (labels[label] && settings.a11y[label]) {\n                settings.a11y[label] = labels[label];\n                update = true;\n              }\n            }\n          }\n\n          if (update) {\n            var openLabel = getEl('clr-open-label');\n            var swatchLabel = getEl('clr-swatch-label');\n\n            openLabel.innerHTML = settings.a11y.open;\n            swatchLabel.innerHTML = settings.a11y.swatch;\n            colorPreview.setAttribute('aria-label', settings.a11y.close);\n            hueSlider.setAttribute('aria-label', settings.a11y.hueSlider);\n            alphaSlider.setAttribute('aria-label', settings.a11y.alphaSlider);\n            colorValue.setAttribute('aria-label', settings.a11y.input);\n            colorArea.setAttribute('aria-label', settings.a11y.instruction);\n          }\n        default:\n          settings[key] = options[key];}\n\n    }\n  }\n\n  /**\n   * Bind the color picker to input fields that match the selector.\n   * @param {string} selector One or more selectors pointing to input fields.\n   */\n  function bindFields(selector) {\n    // Show the color picker on click on the input fields that match the selector\n    addListener(document, 'click', selector, function (event) {\n      var parent = settings.parent;\n      var coords = event.target.getBoundingClientRect();\n      var scrollY = window.scrollY;\n      var reposition = { left: false, top: false };\n      var offset = { x: 0, y: 0 };\n      var left = coords.x;\n      var top = scrollY + coords.y + coords.height + settings.margin;\n\n      currentEl = event.target;\n      oldColor = currentEl.value;\n      currentFormat = getColorFormatFromStr(oldColor);\n      picker.classList.add('clr-open');\n\n      var pickerWidth = picker.offsetWidth;\n      var pickerHeight = picker.offsetHeight;\n\n      // If the color picker is inside a custom container\n      // set the position relative to it\n      if (parent) {\n        var style = window.getComputedStyle(parent);\n        var marginTop = parseFloat(style.marginTop);\n        var borderTop = parseFloat(style.borderTopWidth);\n\n        offset = parent.getBoundingClientRect();\n        offset.y += borderTop + scrollY;\n        left -= offset.x;\n        top -= offset.y;\n\n        if (left + pickerWidth > parent.clientWidth) {\n          left += coords.width - pickerWidth;\n          reposition.left = true;\n        }\n\n        if (top + pickerHeight > parent.clientHeight - marginTop) {\n          top -= coords.height + pickerHeight + settings.margin * 2;\n          reposition.top = true;\n        }\n\n        top += parent.scrollTop;\n\n        // Otherwise set the position relative to the whole document\n      } else {\n        if (left + pickerWidth > document.documentElement.clientWidth) {\n          left += coords.width - pickerWidth;\n          reposition.left = true;\n        }\n\n        if (top + pickerHeight - scrollY > document.documentElement.clientHeight) {\n          top = scrollY + coords.y - pickerHeight - settings.margin;\n          reposition.top = true;\n        }\n      }\n\n      picker.classList.toggle('clr-left', reposition.left);\n      picker.classList.toggle('clr-top', reposition.top);\n      picker.style.left = left + \"px\";\n      picker.style.top = top + \"px\";\n      colorAreaDims = {\n        width: colorArea.offsetWidth,\n        height: colorArea.offsetHeight,\n        x: picker.offsetLeft + colorArea.offsetLeft + offset.x,\n        y: picker.offsetTop + colorArea.offsetTop + offset.y };\n\n\n      setColorFromStr(oldColor);\n\n      if (settings.focusInput) {\n        colorValue.focus({ preventScroll: true });\n      }\n    });\n\n    // Update the color preview of the input fields that match the selector\n    addListener(document, 'input', selector, function (event) {\n      var parent = event.target.parentNode;\n      // Only update the preview if the field has been previously wrapped\n      if (parent.classList.contains('clr-field')) {\n        parent.style.color = event.target.value;\n      }\n    });\n  }\n\n  /**\n   * Wrap the linked input fields in a div that adds a color preview.\n   * @param {string} selector One or more selectors pointing to input fields.\n   */\n  function wrapFields(selector) {\n    document.querySelectorAll(selector).forEach(function (field) {\n      var parentNode = field.parentNode;\n\n      if (!parentNode.classList.contains('clr-field')) {\n        var wrapper = document.createElement('div');\n\n        wrapper.innerHTML = \"<button aria-labelledby=\\\"clr-open-label\\\"></button>\";\n        parentNode.insertBefore(wrapper, field);\n        wrapper.setAttribute('class', 'clr-field');\n        wrapper.style.color = field.value;\n        wrapper.appendChild(field);\n      }\n    });\n  }\n\n  /**\n   * Close the color picker.\n   * @param {boolean} [revert] If true, revert the color to the original value.\n   */\n  function closePicker(revert) {\n    if (currentEl) {\n      // Revert the color to the original value if needed\n      if (revert && oldColor !== currentEl.value) {\n        currentEl.value = oldColor;\n\n        // Trigger an \"input\" event to force update the thumbnail next to the input field\n        currentEl.dispatchEvent(new Event('input', { bubbles: true }));\n      }\n\n      if (oldColor !== currentEl.value) {\n        currentEl.dispatchEvent(new Event('change', { bubbles: true }));\n      }\n\n      picker.classList.remove('clr-open');\n\n      if (settings.focusInput) {\n        currentEl.focus({ preventScroll: true });\n      }\n\n      currentEl = null;\n    }\n  }\n\n  /**\n   * Set the active color from a string.\n   * @param {string} str String representing a color.\n   */\n  function setColorFromStr(str) {\n    var rgba = strToRGBA(str);\n    var hsva = RGBAtoHSVA(rgba);\n\n    updateMarkerA11yLabel(hsva.s, hsva.v);\n    updateColor(rgba, hsva);\n\n    // Update the UI\n    hueSlider.value = hsva.h;\n    picker.style.color = \"hsl(\" + hsva.h + \", 100%, 50%)\";\n    hueMarker.style.left = hsva.h / 360 * 100 + \"%\";\n\n    colorMarker.style.left = colorAreaDims.width * hsva.s / 100 + \"px\";\n    colorMarker.style.top = colorAreaDims.height - colorAreaDims.height * hsva.v / 100 + \"px\";\n\n    alphaSlider.value = hsva.a * 100;\n    alphaMarker.style.left = hsva.a * 100 + \"%\";\n  }\n\n  /**\n   * Guess the color format from a string.\n   * @param {string} str String representing a color.\n   * @return {string} The color format.\n   */\n  function getColorFormatFromStr(str) {\n    var format = str.substring(0, 3).toLowerCase();\n\n    if (format === 'rgb' || format === 'hsl') {\n      return format;\n    }\n\n    return 'hex';\n  }\n\n  /**\n   * Copy the active color to the linked input field.\n   * @param {number} [color] Color value to override the active color.\n   */\n  function pickColor(color) {\n    if (currentEl) {\n      currentEl.value = color !== undefined ? color : colorValue.value;\n      currentEl.dispatchEvent(new Event('input', { bubbles: true }));\n    }\n  }\n\n  /**\n   * Set the active color based on a specific point in the color gradient.\n   * @param {number} x Left position.\n   * @param {number} y Top position.\n   */\n  function setColorAtPosition(x, y) {\n    var hsva = {\n      h: hueSlider.value * 1,\n      s: x / colorAreaDims.width * 100,\n      v: 100 - y / colorAreaDims.height * 100,\n      a: alphaSlider.value / 100 };\n\n    var rgba = HSVAtoRGBA(hsva);\n\n    updateMarkerA11yLabel(hsva.s, hsva.v);\n    updateColor(rgba, hsva);\n    pickColor();\n  }\n\n  /**\n   * Update the color marker's accessibility label.\n   * @param {number} saturation\n   * @param {number} value\n   */\n  function updateMarkerA11yLabel(saturation, value) {\n    var label = settings.a11y.marker;\n\n    saturation = saturation.toFixed(1) * 1;\n    value = value.toFixed(1) * 1;\n    label = label.replace('{s}', saturation);\n    label = label.replace('{v}', value);\n    colorMarker.setAttribute('aria-label', label);\n  }\n\n  //\n  /**\n   * Get the pageX and pageY positions of the pointer.\n   * @param {object} event The MouseEvent or TouchEvent object.\n   * @return {object} The pageX and pageY positions.\n   */\n  function getPointerPosition(event) {\n    return {\n      pageX: event.changedTouches ? event.changedTouches[0].pageX : event.pageX,\n      pageY: event.changedTouches ? event.changedTouches[0].pageY : event.pageY };\n\n  }\n\n  /**\n   * Move the color marker when dragged.\n   * @param {object} event The MouseEvent object.\n   */\n  function moveMarker(event) {\n    var pointer = getPointerPosition(event);\n    var x = pointer.pageX - colorAreaDims.x;\n    var y = pointer.pageY - colorAreaDims.y;\n\n    if (settings.parent) {\n      y += settings.parent.scrollTop;\n    }\n\n    x = x < 0 ? 0 : x > colorAreaDims.width ? colorAreaDims.width : x;\n    y = y < 0 ? 0 : y > colorAreaDims.height ? colorAreaDims.height : y;\n\n    colorMarker.style.left = x + \"px\";\n    colorMarker.style.top = y + \"px\";\n\n    setColorAtPosition(x, y);\n\n    // Prevent scrolling while dragging the marker\n    event.preventDefault();\n    event.stopPropagation();\n  }\n\n  /**\n   * Move the color marker when the arrow keys are pressed.\n   * @param {number} offsetX The horizontal amount to move.\n   * * @param {number} offsetY The vertical amount to move.\n   */\n  function moveMarkerOnKeydown(offsetX, offsetY) {\n    var x = colorMarker.style.left.replace('px', '') * 1 + offsetX;\n    var y = colorMarker.style.top.replace('px', '') * 1 + offsetY;\n\n    colorMarker.style.left = x + \"px\";\n    colorMarker.style.top = y + \"px\";\n\n    setColorAtPosition(x, y);\n  }\n\n  /**\n   * Update the color picker's input field and preview thumb.\n   * @param {Object} rgba Red, green, blue and alpha values.\n   * @param {Object} [hsva] Hue, saturation, value and alpha values.\n   */\n  function updateColor(rgba, hsva) {if (rgba === void 0) {rgba = {};}if (hsva === void 0) {hsva = {};}\n    var format = settings.format;\n\n    for (var key in rgba) {\n      currentColor[key] = rgba[key];\n    }\n\n    for (var _key in hsva) {\n      currentColor[_key] = hsva[_key];\n    }\n\n    var hex = RGBAToHex(currentColor);\n    var opaqueHex = hex.substring(0, 7);\n\n    colorMarker.style.color = opaqueHex;\n    alphaMarker.parentNode.style.color = opaqueHex;\n    alphaMarker.style.color = hex;\n    colorPreview.style.color = hex;\n\n    // Force repaint the color and alpha gradients as a workaround for a Google Chrome bug\n    colorArea.style.display = 'none';\n    colorArea.offsetHeight;\n    colorArea.style.display = '';\n    alphaMarker.nextElementSibling.style.display = 'none';\n    alphaMarker.nextElementSibling.offsetHeight;\n    alphaMarker.nextElementSibling.style.display = '';\n\n    if (format === 'mixed') {\n      format = currentColor.a === 1 ? 'hex' : 'rgb';\n    } else if (format === 'auto') {\n      format = currentFormat;\n    }\n\n    switch (format) {\n      case 'hex':\n        colorValue.value = hex;\n        break;\n      case 'rgb':\n        colorValue.value = RGBAToStr(currentColor);\n        break;\n      case 'hsl':\n        colorValue.value = HSLAToStr(HSVAtoHSLA(currentColor));\n        break;}\n\n\n    // Select the current format in the format switcher\n    document.querySelector(\".clr-format [value=\\\"\" + format + \"\\\"]\").checked = true;\n  }\n\n  /**\n   * Set the hue when its slider is moved.\n   */\n  function setHue() {\n    var hue = hueSlider.value * 1;\n    var x = colorMarker.style.left.replace('px', '') * 1;\n    var y = colorMarker.style.top.replace('px', '') * 1;\n\n    picker.style.color = \"hsl(\" + hue + \", 100%, 50%)\";\n    hueMarker.style.left = hue / 360 * 100 + \"%\";\n\n    setColorAtPosition(x, y);\n  }\n\n  /**\n   * Set the alpha when its slider is moved.\n   */\n  function setAlpha() {\n    var alpha = alphaSlider.value / 100;\n\n    alphaMarker.style.left = alpha * 100 + \"%\";\n    updateColor({ a: alpha });\n    pickColor();\n  }\n\n  /**\n   * Convert HSVA to RGBA.\n   * @param {object} hsva Hue, saturation, value and alpha values.\n   * @return {object} Red, green, blue and alpha values.\n   */\n  function HSVAtoRGBA(hsva) {\n    var saturation = hsva.s / 100;\n    var value = hsva.v / 100;\n    var chroma = saturation * value;\n    var hueBy60 = hsva.h / 60;\n    var x = chroma * (1 - Math.abs(hueBy60 % 2 - 1));\n    var m = value - chroma;\n\n    chroma = chroma + m;\n    x = x + m;\n\n    var index = Math.floor(hueBy60) % 6;\n    var red = [chroma, x, m, m, x, chroma][index];\n    var green = [x, chroma, chroma, x, m, m][index];\n    var blue = [m, m, x, chroma, chroma, x][index];\n\n    return {\n      r: Math.round(red * 255),\n      g: Math.round(green * 255),\n      b: Math.round(blue * 255),\n      a: hsva.a };\n\n  }\n\n  /**\n   * Convert HSVA to HSLA.\n   * @param {object} hsva Hue, saturation, value and alpha values.\n   * @return {object} Hue, saturation, lightness and alpha values.\n   */\n  function HSVAtoHSLA(hsva) {\n    var value = hsva.v / 100;\n    var lightness = value * (1 - hsva.s / 100 / 2);\n    var saturation;\n\n    if (lightness > 0 && lightness < 1) {\n      saturation = Math.round((value - lightness) / Math.min(lightness, 1 - lightness) * 100);\n    }\n\n    return {\n      h: hsva.h,\n      s: saturation || 0,\n      l: Math.round(lightness * 100),\n      a: hsva.a };\n\n  }\n\n  /**\n   * Convert RGBA to HSVA.\n   * @param {object} rgba Red, green, blue and alpha values.\n   * @return {object} Hue, saturation, value and alpha values.\n   */\n  function RGBAtoHSVA(rgba) {\n    var red = rgba.r / 255;\n    var green = rgba.g / 255;\n    var blue = rgba.b / 255;\n    var xmax = Math.max(red, green, blue);\n    var xmin = Math.min(red, green, blue);\n    var chroma = xmax - xmin;\n    var value = xmax;\n    var hue = 0;\n    var saturation = 0;\n\n    if (chroma) {\n      if (xmax === red) {hue = (green - blue) / chroma;}\n      if (xmax === green) {hue = 2 + (blue - red) / chroma;}\n      if (xmax === blue) {hue = 4 + (red - green) / chroma;}\n      if (xmax) {saturation = chroma / xmax;}\n    }\n\n    hue = Math.floor(hue * 60);\n\n    return {\n      h: hue < 0 ? hue + 360 : hue,\n      s: Math.round(saturation * 100),\n      v: Math.round(value * 100),\n      a: rgba.a };\n\n  }\n\n  /**\n   * Parse a string to RGBA.\n   * @param {string} str String representing a color.\n   * @return {object} Red, green, blue and alpha values.\n   */\n  function strToRGBA(str) {\n    var regex = /^((rgba)|rgb)[\\D]+([\\d.]+)[\\D]+([\\d.]+)[\\D]+([\\d.]+)[\\D]*?([\\d.]+|$)/i;\n    var match, rgba;\n\n    // Default to black for invalid color strings\n    ctx.fillStyle = '#000';\n\n    // Use canvas to convert the string to a valid color string\n    ctx.fillStyle = str;\n    match = regex.exec(ctx.fillStyle);\n\n    if (match) {\n      rgba = {\n        r: match[3] * 1,\n        g: match[4] * 1,\n        b: match[5] * 1,\n        a: match[6] * 1 };\n\n\n      // Workaround to mitigate a Chromium bug where the alpha value is rounded incorrectly\n      rgba.a = +rgba.a.toFixed(2);\n\n    } else {\n      match = ctx.fillStyle.replace('#', '').match(/.{2}/g).map(function (h) {return parseInt(h, 16);});\n      rgba = {\n        r: match[0],\n        g: match[1],\n        b: match[2],\n        a: 1 };\n\n    }\n\n    return rgba;\n  }\n\n  /**\n   * Convert RGBA to Hex.\n   * @param {object} rgba Red, green, blue and alpha values.\n   * @return {string} Hex color string.\n   */\n  function RGBAToHex(rgba) {\n    var R = rgba.r.toString(16);\n    var G = rgba.g.toString(16);\n    var B = rgba.b.toString(16);\n    var A = '';\n\n    if (rgba.r < 16) {\n      R = '0' + R;\n    }\n\n    if (rgba.g < 16) {\n      G = '0' + G;\n    }\n\n    if (rgba.b < 16) {\n      B = '0' + B;\n    }\n\n    if (settings.alpha && rgba.a < 1) {\n      var alpha = rgba.a * 255 | 0;\n      A = alpha.toString(16);\n\n      if (alpha < 16) {\n        A = '0' + A;\n      }\n    }\n\n    return '#' + R + G + B + A;\n  }\n\n  /**\n   * Convert RGBA values to a CSS rgb/rgba string.\n   * @param {object} rgba Red, green, blue and alpha values.\n   * @return {string} CSS color string.\n   */\n  function RGBAToStr(rgba) {\n    if (!settings.alpha || rgba.a === 1) {\n      return \"rgb(\" + rgba.r + \", \" + rgba.g + \", \" + rgba.b + \")\";\n    } else {\n      return \"rgba(\" + rgba.r + \", \" + rgba.g + \", \" + rgba.b + \", \" + rgba.a + \")\";\n    }\n  }\n\n  /**\n   * Convert HSLA values to a CSS hsl/hsla string.\n   * @param {object} hsla Hue, saturation, lightness and alpha values.\n   * @return {string} CSS color string.\n   */\n  function HSLAToStr(hsla) {\n    if (!settings.alpha || hsla.a === 1) {\n      return \"hsl(\" + hsla.h + \", \" + hsla.s + \"%, \" + hsla.l + \"%)\";\n    } else {\n      return \"hsla(\" + hsla.h + \", \" + hsla.s + \"%, \" + hsla.l + \"%, \" + hsla.a + \")\";\n    }\n  }\n\n  /**\n   * Init the color picker.\n   */\n  function init() {\n    // Render the UI\n    picker = document.createElement('div');\n    picker.setAttribute('id', 'clr-picker');\n    picker.className = 'clr-picker';\n    picker.innerHTML =\n    \"<input id=\\\"clr-color-value\\\" class=\\\"clr-color\\\" type=\\\"text\\\" value=\\\"\\\" spellcheck=\\\"false\\\" aria-label=\\\"\" + settings.a11y.input + \"\\\">\" + (\"<div id=\\\"clr-color-area\\\" class=\\\"clr-gradient\\\" role=\\\"application\\\" aria-label=\\\"\" +\n    settings.a11y.instruction + \"\\\">\") +\n    '<div id=\"clr-color-marker\" class=\"clr-marker\" tabindex=\"0\"></div>' +\n    '</div>' +\n    '<div class=\"clr-hue\">' + (\"<input id=\\\"clr-hue-slider\\\" type=\\\"range\\\" min=\\\"0\\\" max=\\\"360\\\" step=\\\"1\\\" aria-label=\\\"\" +\n    settings.a11y.hueSlider + \"\\\">\") +\n    '<div id=\"clr-hue-marker\"></div>' +\n    '</div>' +\n    '<div class=\"clr-alpha\">' + (\"<input id=\\\"clr-alpha-slider\\\" type=\\\"range\\\" min=\\\"0\\\" max=\\\"100\\\" step=\\\"1\\\" aria-label=\\\"\" +\n    settings.a11y.alphaSlider + \"\\\">\") +\n    '<div id=\"clr-alpha-marker\"></div>' +\n    '<span></span>' +\n    '</div>' +\n    '<div id=\"clr-format\" class=\"clr-format\">' +\n    '<fieldset class=\"clr-segmented\">' + (\"<legend>\" +\n    settings.a11y.format + \"</legend>\") +\n    '<input id=\"clr-f1\" type=\"radio\" name=\"clr-format\" value=\"hex\">' +\n    '<label for=\"clr-f1\">Hex</label>' +\n    '<input id=\"clr-f2\" type=\"radio\" name=\"clr-format\" value=\"rgb\">' +\n    '<label for=\"clr-f2\">RGB</label>' +\n    '<input id=\"clr-f3\" type=\"radio\" name=\"clr-format\" value=\"hsl\">' +\n    '<label for=\"clr-f3\">HSL</label>' +\n    '<span></span>' +\n    '</fieldset>' +\n    '</div>' +\n    '<div id=\"clr-swatches\" class=\"clr-swatches\"></div>' + (\"<button id=\\\"clr-clear\\\" class=\\\"clr-clear\\\">\" +\n    settings.clearButton.label + \"</button>\") + (\"<button id=\\\"clr-color-preview\\\" class=\\\"clr-preview\\\" aria-label=\\\"\" +\n    settings.a11y.close + \"\\\"></button>\") + (\"<span id=\\\"clr-open-label\\\" hidden>\" +\n    settings.a11y.open + \"</span>\") + (\"<span id=\\\"clr-swatch-label\\\" hidden>\" +\n    settings.a11y.swatch + \"</span>\");\n\n    // Append the color picker to the DOM\n    document.body.appendChild(picker);\n\n    // Reference the UI elements\n    colorArea = getEl('clr-color-area');\n    colorMarker = getEl('clr-color-marker');\n    clearButton = getEl('clr-clear');\n    colorPreview = getEl('clr-color-preview');\n    colorValue = getEl('clr-color-value');\n    hueSlider = getEl('clr-hue-slider');\n    hueMarker = getEl('clr-hue-marker');\n    alphaSlider = getEl('clr-alpha-slider');\n    alphaMarker = getEl('clr-alpha-marker');\n\n    // Bind the picker to the default selector\n    bindFields(settings.el);\n    wrapFields(settings.el);\n\n    addListener(picker, 'mousedown', function (event) {\n      picker.classList.remove('clr-keyboard-nav');\n      event.stopPropagation();\n    });\n\n    addListener(colorArea, 'mousedown', function (event) {\n      addListener(document, 'mousemove', moveMarker);\n    });\n\n    addListener(colorArea, 'touchstart', function (event) {\n      document.addEventListener('touchmove', moveMarker, { passive: false });\n    });\n\n    addListener(colorMarker, 'mousedown', function (event) {\n      addListener(document, 'mousemove', moveMarker);\n    });\n\n    addListener(colorMarker, 'touchstart', function (event) {\n      document.addEventListener('touchmove', moveMarker, { passive: false });\n    });\n\n    addListener(colorValue, 'change', function (event) {\n      setColorFromStr(colorValue.value);\n      pickColor();\n    });\n\n    addListener(clearButton, 'click', function (event) {\n      pickColor('');\n      closePicker();\n    });\n\n    addListener(colorPreview, 'click', function (event) {\n      pickColor();\n      closePicker();\n    });\n\n    addListener(document, 'click', '.clr-format input', function (event) {\n      currentFormat = event.target.value;\n      updateColor();\n      pickColor();\n    });\n\n    addListener(picker, 'click', '.clr-swatches button', function (event) {\n      setColorFromStr(event.target.textContent);\n      pickColor();\n\n      if (settings.autoClose) {\n        closePicker();\n      }\n    });\n\n    addListener(document, 'mouseup', function (event) {\n      document.removeEventListener('mousemove', moveMarker);\n    });\n\n    addListener(document, 'touchend', function (event) {\n      document.removeEventListener('touchmove', moveMarker);\n    });\n\n    addListener(document, 'mousedown', function (event) {\n      picker.classList.remove('clr-keyboard-nav');\n      closePicker();\n    });\n\n    addListener(document, 'keydown', function (event) {\n      if (event.key === 'Escape') {\n        closePicker(true);\n      } else if (event.key === 'Tab') {\n        picker.classList.add('clr-keyboard-nav');\n      }\n    });\n\n    addListener(document, 'click', '.clr-field button', function (event) {\n      event.target.nextElementSibling.dispatchEvent(new Event('click', { bubbles: true }));\n    });\n\n    addListener(colorMarker, 'keydown', function (event) {\n      var movements = {\n        ArrowUp: [0, -1],\n        ArrowDown: [0, 1],\n        ArrowLeft: [-1, 0],\n        ArrowRight: [1, 0] };\n\n\n      if (Object.keys(movements).indexOf(event.key) !== -1) {\n        moveMarkerOnKeydown.apply(void 0, movements[event.key]);\n        event.preventDefault();\n      }\n    });\n\n    addListener(colorArea, 'click', moveMarker);\n    addListener(hueSlider, 'input', setHue);\n    addListener(alphaSlider, 'input', setAlpha);\n  }\n\n  /**\n   * Shortcut for getElementById to optimize the minified JS.\n   * @param {string} id The element id.\n   * @return {object} The DOM element with the provided id.\n   */\n  function getEl(id) {\n    return document.getElementById(id);\n  }\n\n  /**\n   * Shortcut for addEventListener to optimize the minified JS.\n   * @param {object} context The context to which the listener is attached.\n   * @param {string} type Event type.\n   * @param {(string|function)} selector Event target if delegation is used, event handler if not.\n   * @param {function} [fn] Event handler if delegation is used.\n   */\n  function addListener(context, type, selector, fn) {\n    var matches = Element.prototype.matches || Element.prototype.msMatchesSelector;\n\n    // Delegate event to the target of the selector\n    if (typeof selector === 'string') {\n      context.addEventListener(type, function (event) {\n        if (matches.call(event.target, selector)) {\n          fn.call(event.target, event);\n        }\n      });\n\n      // If the selector is not a string then it's a function\n      // in which case we need regular event listener\n    } else {\n      fn = selector;\n      context.addEventListener(type, fn);\n    }\n  }\n\n  /**\n   * Call a function only when the DOM is ready.\n   * @param {function} fn The function to call.\n   * @param {array} [args] Arguments to pass to the function.\n   */\n  function DOMReady(fn, args) {\n    args = args !== undefined ? args : [];\n\n    if (document.readyState !== 'loading') {\n      fn.apply(void 0, args);\n    } else {\n      document.addEventListener('DOMContentLoaded', function () {\n        fn.apply(void 0, args);\n      });\n    }\n  }\n\n  // Polyfill for Nodelist.forEach\n  if (NodeList !== undefined && NodeList.prototype && !NodeList.prototype.forEach) {\n    NodeList.prototype.forEach = Array.prototype.forEach;\n  }\n\n  // Expose the color picker to the global scope\n  window.Coloris = function () {\n    var methods = {\n      set: configure,\n      wrap: wrapFields,\n      close: closePicker };\n\n\n    function Coloris(options) {\n      DOMReady(function () {\n        if (options) {\n          if (typeof options === 'string') {\n            bindFields(options);\n          } else {\n            configure(options);\n          }\n        }\n      });\n    }var _loop = function _loop(\n\n    key) {\n      Coloris[key] = function () {for (var _len = arguments.length, args = new Array(_len), _key2 = 0; _key2 < _len; _key2++) {args[_key2] = arguments[_key2];}\n        DOMReady(methods[key], args);\n      };};for (var key in methods) {_loop(key);\n    }\n\n    return Coloris;\n  }();\n\n  // Init the color picker when the DOM is ready\n  DOMReady(init);\n\n})(window, document, Math);\n\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  Coloris({\n    swatches: [\n      '#264653',\n      '#2a9d8f',\n      '#e9c46a',\n      '#f4a261',\n      '#e76f51',\n      '#d62828',\n      '#023e8a',\n      '#0077b6',\n      '#0096c7',\n      '#00b4d8',\n      '#48cae4',\n    ],\n    theme: 'large',\n    formatToggle: true,\n   \n  });\n  });"]}